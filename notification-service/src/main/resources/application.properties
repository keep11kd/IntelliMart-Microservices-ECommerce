spring.profiles.active=docker
# Server Port for Notification Service
server.port=8085

# Spring Application Name (for Eureka)
spring.application.name=notification-service

# Eureka Client Configuration (Eureka server is now 'eureka-server' service)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.hostname=notification-service
 # Use service name for instance hostname within Docker Compose
eureka.instance.instance-id=${spring.application.name}:${instance_id:${random.value}}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# RabbitMQ Configuration (RabbitMQ server is now 'rabbitmq' service)
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Spring Boot Actuator Configuration [2025-07-31] Added
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Logging Details
logging.level.root=INFO
 # [2025-07-31] Set root logging level
logging.level.org.springframework=INFO
 # [2025-07-31] Set Spring framework logging level
logging.level.com.intelimart=DEBUG
 # [2025-07-31] Set your application's package logging level to DEBUG
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
 # [2025-07-31] Added for consistent log pattern with tracing info
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.springframework.amqp=DEBUG
logging.level.io.micrometer.tracing=DEBUG