# Server Port for Auth Service
server.port=8089

# Spring Application Name (for Eureka)
spring.application.name=auth-service

# Database Configuration for MySQL (MySQL server is now 'mysql' service)
spring.datasource.url=jdbc:mysql://mysql:3306/intelimart_auth_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA (Hibernate) Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Eureka Client Configuration (Eureka server is now 'eureka-server' service)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.hostname=auth-service # Use service name for instance hostname within Docker Compose
eureka.instance.instance-id=${spring.application.name}:${instance_id:${random.value}}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# JWT Configuration (Secret and Expiration for token generation)
# These will be passed as environment variables from docker-compose.yml
 application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
 application.security.jwt.expiration=86400000
 application.security.jwt.refresh-token.expiration=604800000

# Actuator Configuration
management.endpoints.web.exposure.include=*

# Logging Details
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.io.micrometer.tracing=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG