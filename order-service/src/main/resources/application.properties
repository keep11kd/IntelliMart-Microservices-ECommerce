# Application Name
spring.application.name=order-service

# Server Port for this Microservice
server.port=8084

# Database Configuration for MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/intellimart_order_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA (Hibernate) Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Explicitly set MySQL Dialect for Hibernate 6 if not auto-detected correctly
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
# Recommended: Add instance-id for unique identification, especially for multiple instances
eureka.instance.instance-id=${spring.application.name}:${instance_id:${random.value}}
# Ensure Eureka client registers and fetches registry (usually default true, but explicit is good)
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# --- Day 25 Updates Begin Here ---

# 1. Feign Client Configuration (for timeouts)
# Define general Feign client connection and read timeouts
# Connect timeout: How long to wait to establish a connection (in milliseconds)
spring.cloud.openfeign.client.config.default.connectTimeout=5000
# Read timeout: How long to wait for data to be read from the established connection (in milliseconds)
spring.cloud.openfeign.client.config.default.readTimeout=10000

# 2. Circuit Breaker (Resilience4j) Configuration
# Enable management endpoints for health and metrics, useful for monitoring Resilience4j
management.endpoints.web.exposure.include=health,metrics,prometheus,circuitbreakers

# Global Resilience4j Circuit Breaker Defaults
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10 
# Number of calls in the sliding window
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
# Percentage of failures to open the circuit
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
 # Duration the circuit stays open
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
 # Calls allowed in half-open state
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
# Example: Do not count specific exceptions as failures for circuit breaker
resilience4j.circuitbreaker.configs.default.ignoreExceptions=com.intellimart.orderservice.exception.ResourceNotFoundException

# Global Resilience4j TimeLimiter Defaults
resilience4j.timelimiter.configs.default.timeoutDuration=5s
 # Default timeout for calls wrapped by TimeLimiter
resilience4j.timelimiter.configs.default.cancelRunningFuture=true

# Global Resilience4j Retry Defaults
resilience4j.retry.configs.default.maxAttempts=3
 # Max number of retry attempts
resilience4j.retry.configs.default.waitDuration=1s
 # Wait duration between retries
resilience4j.retry.configs.default.retryExceptions=java.util.concurrent.TimeoutException,java.io.IOException
 # Exceptions to retry on

# Global Resilience4j Bulkhead Defaults (for thread pool based bulkhead, common with Spring Cloud CircuitBreaker)
resilience4j.bulkhead.configs.default.maxWaitDuration=0
 # Don't wait, immediately reject if no capacity
resilience4j.bulkhead.configs.default.maxConcurrentCalls=25
 # Max concurrent calls allowed

# Specific configurations for Feign Clients if needed
# Example: For a Feign client named 'productClient' (used in @FeignClient(name="product-service"))
resilience4j.circuitbreaker.instances.productClient.baseConfig=default
resilience4j.timelimiter.instances.productClient.baseConfig=default
# You might want a slightly longer timeout for external service calls
resilience4j.timelimiter.instances.productClient.timeoutDuration=7s

# Example: For a Feign client named 'shoppingCartClient'
resilience4j.circuitbreaker.instances.shoppingCartClient.baseConfig=default
resilience4j.timelimiter.instances.shoppingCartClient.baseConfig=default
resilience4j.timelimiter.instances.shoppingCartClient.timeoutDuration=7s

# 3. Observability (Micrometer Tracing & Zipkin) Configuration
# Base URL of your Zipkin server
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# Sampling probability: 1.0 means all requests are traced. Adjust in production.
management.tracing.sampling.probability=1.0

# --- Day 25 Updates End Here ---

# Logging Details (existing, but note added resilience4j logging)
# For complete log detail of this module when run
logging.level.com.netflix.discovery=DEBUG
# General debug logging for Spring Boot auto-configuration (useful for context load errors)
logging.level.org.springframework.boot.autoconfigure=DEBUG
# Debug logging for JPA/Hibernate operations
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
# Enable logging for Resilience4j
logging.level.io.github.resilience4j=DEBUG
# Enable logging for Micrometer Tracing (helpful for debugging traces)
logging.level.io.micrometer.tracing=DEBUG




# Razorpay API Keys and Webhook Secret
razorpay.key-id=rzp_test_BRg0a8xA7ICk6v
razorpay.key-secret=WNfupjGp18ruBLcWkRMQmP3w
razorpay.webhook-secret=
# we are skipping to add webhok for now because it is not showing the secret key.


# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.management.metrics.export.rabbit.enabled=true