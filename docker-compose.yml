# Define common environment variables for reuse
x-common-env: &common-env
  EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/

x-db-env: &db-env
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root

x-jwt-env: &jwt-env
  # Use a single, consistent JWT secret variable
  APP_JWT_SECRET: ${APP_JWT_SECRET}
  APP_JWT_EXPIRATION: ${APP_JWT_EXPIRATION}

services:
  mysql:
    image: mysql:8.0
    container_name: intellimart-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: intelimart_auth_db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - intellimart-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: intellimart-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - intellimart-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: intellimart-eureka-server
    ports:
      - "8761:8761"
    networks:
      - intellimart-network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  auth-service:
  
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: intellimart-auth-service
    ports:
      - "8089:8089"
    environment:
      <<: [*common-env, *db-env, *jwt-env]
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/intelimart_auth_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      APPLICATION_SECURITY_JWT_SECRET_KEY: ${APP_JWT_SECRET}
      APPLICATION_SECURITY_JWT_EXPIRATION: ${APP_JWT_EXPIRATION}
      APPLICATION_SECURITY_JWT_REFRESH_TOKEN_EXPIRATION: 604800000
    networks:
      - intellimart-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: intellimart-product-service
    ports:
      - "8082:8082"
    environment:
      <<: [*common-env, *db-env]
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/intelimart_product_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      PRODUCT_IMAGES_UPLOAD_DIR: /app/uploads
    volumes:
      - ./product-service/uploads:/app/uploads
    networks:
      - intellimart-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  shopping-cart-service:
    build:
      context: ./shopping-cart-service
      dockerfile: Dockerfile
    container_name: intellimart-shopping-cart-service
    ports:
      - "8083:8083"
    environment:
      <<: [*common-env, *db-env]
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/intelimart_cart_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    networks:
      - intellimart-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: intellimart-order-service
    ports:
      - "8084:8084"
    environment:
      <<: [*common-env, *db-env]
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/intelimart_order_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - intellimart-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: intellimart-notification-service
    ports:
      - "8085:8085"
    environment:
      <<: [*common-env]
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - intellimart-network
    depends_on:
      eureka-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: intellimart-api-gateway
    ports:
      - "8081:8081"
    environment:
      <<: [*common-env]
      JWT_SECRET: ${APP_JWT_SECRET}
      JWT_EXPIRATION: ${APP_JWT_EXPIRATION}
    networks:
      - intellimart-network
    depends_on:
      auth-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      shopping-cart-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

volumes:
  mysql_data:

networks:
  intellimart-network:
    driver: bridge