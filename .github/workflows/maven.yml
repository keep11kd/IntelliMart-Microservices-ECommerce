# 🏗️ Workflow name as it appears in GitHub Actions UI
name: Java CI with Maven

# 📌 When to trigger the workflow
on:
  push:
    branches: [ "main" ]  # Trigger only when code is pushed to the 'main' branch
  pull_request:
    branches: [ "main" ]  # Also trigger when a PR targets the 'main' branch

jobs:
  build-and-test:  # Job ID (used internally)
    runs-on: ubuntu-latest  # 🖥️ Use a fresh Ubuntu runner hosted by GitHub

    steps:
      # 🔍 Step 1: Checkout source code from the repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 📜 Fetch full history for accurate build versioning or changelogs

      # ☕ Step 2: Set up Java 17 using Eclipse Temurin distribution
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'       # 👈 Use Java 17
          distribution: 'temurin'  # 👈 Recommended OpenJDK distribution

      # ⚡ Step 3: Cache local Maven dependencies (~/.m2 folder) to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2  # 🗃️ Maven stores downloaded dependencies here
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 🧪 Step 4: Run Maven build and tests only for 'auth-service' module
      - name: Build and Test Auth Service
        working-directory: auth-service  # 👣 Navigate into the subfolder for this module
        run: mvn clean install -Dspring.profiles.active=test
          # 🛠️ Build and test (unit tests must pass or job fails)
