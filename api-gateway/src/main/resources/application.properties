spring.profiles.active=docker
# Server Port for API Gateway
server.port=8081

# Spring Application Name (for Eureka)
spring.application.name=api-gateway

# Eureka Client Configuration (Eureka server is now 'eureka-server' service)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.hostname=api-gateway
 # Use service name for instance hostname within Docker Compose
eureka.instance.instance-id=${spring.application.name}:${instance_id:${random.value}}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true


# Spring Cloud Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Spring Cloud Gateway Routes
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://AUTH-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/auth/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[1].id=eureka-server-route
spring.cloud.gateway.routes[1].uri=lb://EUREKA-SERVER
spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/eureka/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[2].id=product-service
spring.cloud.gateway.routes[2].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/products/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[3].id=shopping-cart-service
spring.cloud.gateway.routes[3].uri=lb://SHOPPING-CART-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/cart/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/cart/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/orders/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[5].id=notification-service
spring.cloud.gateway.routes[5].uri=lb://NOTIFICATION-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/notifications/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/api/notifications/(?<segment>.*), /${segment}

# Configure global filters
spring.cloud.gateway.default-filters[0].name=JwtAuthenticationFilter

# JWT Configuration (MUST match Auth Service's secret and expiration)
# These will be passed as environment variables from docker-compose.yml
# jwt.secret=YVMzYyFxUjhsTWJ6WHk3MWVMKm9ARzUhaE5wMlVkWGU=
# jwt.expiration=36000000

# Resilience4j Configuration for API Gateway
# [2025-07-31] Updated to include all endpoints as per instruction
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
 # [2025-07-31] Added for detailed health info
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.timelimiter.configs.default.timeoutDuration=5s
resilience4j.timelimiter.configs.default.cancelRunningFuture=true
resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=1s
resilience4j.retry.configs.default.retryExceptions=java.util.concurrent.TimeoutException,java.io.IOException
resilience4j.bulkhead.configs.default.maxWaitDuration=0
resilience4j.bulkhead.configs.default.maxConcurrentCalls=25

resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.baseConfig=default
resilience4j.timelimiter.instances.authServiceTimeLimiter.baseConfig=default
resilience4j.retry.instances.authServiceRetry.baseConfig=default
resilience4j.bulkhead.instances.authServiceBulkhead.baseConfig=default

resilience4j.circuitbreaker.instances.productServiceCircuitBreaker.baseConfig=default
resilience4j.timelimiter.instances.productServiceTimeLimiter.baseConfig=default
resilience4j.retry.instances.productServiceRetry.baseConfig=default
resilience4j.bulkhead.instances.productServiceBulkhead.baseConfig=default

resilience4j.circuitbreaker.instances.shoppingCartServiceCircuitBreaker.baseConfig=default
resilience4j.timelimiter.instances.shoppingCartServiceTimeLimiter.baseConfig=default
resilience4j.retry.instances.shoppingCartServiceRetry.baseConfig=default
resilience4j.bulkhead.instances.shoppingCartServiceBulkhead.baseConfig=default

resilience4j.circuitbreaker.instances.orderServiceCircuitBreaker.baseConfig=default
resilience4j.timelimiter.instances.orderServiceTimeLimiter.baseConfig=default
resilience4j.retry.instances.orderServiceRetry.baseConfig=default
resilience4j.bulkhead.instances.orderServiceBulkhead.baseConfig=default

resilience4j.circuitbreaker.instances.notificationServiceCircuitBreaker.baseConfig=default
resilience4j.timelimiter.instances.notificationServiceTimeLimiter.baseConfig=default
resilience4j.retry.instances.notificationServiceRetry.baseConfig=default
resilience4j.bulkhead.instances.notificationServiceBulkhead.baseConfig=default

# Logging Details
logging.level.root=INFO # [2025-07-31] Set root logging level
logging.level.org.springframework=INFO
 # [2025-07-31] Set Spring framework logging level
logging.level.com.intelimart=DEBUG
 # [2025-07-31] Set your application's package logging level to DEBUG
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
 # [2025-07-31] Added for consistent log pattern with tracing info
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.io.github.resilience4j=DEBUG
logging.level.io.micrometer.tracing=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG