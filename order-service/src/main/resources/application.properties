# Server Port for Order Service
server.port=8084

# Spring Application Name (for Eureka)
spring.application.name=order-service

# Database Configuration for MySQL (MySQL server is now 'mysql' service)
spring.datasource.url=jdbc:mysql://mysql:3306/intelimart_order_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA (Hibernate) Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Eureka Client Configuration (Eureka server is now 'eureka-server' service)
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.hostname=order-service
 # Use service name for instance hostname within Docker Compose
eureka.instance.instance-id=${spring.application.name}:${instance_id:${random.value}}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Feign Client Configuration (for timeouts)
spring.cloud.openfeign.client.config.default.connectTimeout=5000
spring.cloud.openfeign.client.config.default.readTimeout=10000

# Circuit Breaker (Resilience4j) Configuration
# [2025-07-31] Updated to include all endpoints as per instruction
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
 # [2025-07-31] Added for detailed health info
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.ignoreExceptions=com.intellimart.orderservice.exception.ResourceNotFoundException

resilience4j.timelimiter.configs.default.timeoutDuration=5s
resilience4j.timelimiter.configs.default.cancelRunningFuture=true

resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=1s
resilience4j.retry.configs.default.retryExceptions=java.util.concurrent.TimeoutException,java.io.IOException

resilience4j.bulkhead.configs.default.maxWaitDuration=0
resilience4j.bulkhead.configs.default.maxConcurrentCalls=25

# Specific configurations for Feign Clients if needed
resilience4j.circuitbreaker.instances.productClient.baseConfig=default
resilience4j.timelimiter.instances.productClient.baseConfig=default
resilience4j.timelimiter.instances.productClient.timeoutDuration=7s

# RabbitMQ Configuration for Order Service (RabbitMQ server is now 'rabbitmq' service)
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Logging Details
logging.level.root=INFO
 # [2025-07-31] Set root logging level
logging.level.org.springframework=INFO
 # [2025-07-31] Set Spring framework logging level
logging.level.com.intelimart=DEBUG
 # [2025-07-31] Set your application's package logging level to DEBUG
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
 # [2025-07-31] Added for consistent log pattern with tracing info
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.io.github.resilience4j=DEBUG
logging.level.io.micrometer.tracing=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.springframework.amqp=DEBUG

razorpay.key-id=rzp_test_BRg0a8xA7ICk6v
razorpay.key-secret=WNfupjGp18ruBLcWkRMQmP3w
razorpay.webhook.secret=gG1sN0l3c2x4Y1l5d0h0c1F2YjVqN0t2ZzFjMjY0d0Q=